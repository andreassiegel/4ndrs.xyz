<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>infrastructure-as-code on 4ndrs.xyz</title><link>https://4ndrs.xyz/tags/infrastructure-as-code/</link><description>Recent content in infrastructure-as-code on 4ndrs.xyz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 27 May 2017 00:00:00 +0200</lastBuildDate><atom:link href="https://4ndrs.xyz/tags/infrastructure-as-code/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started with Terraform, AWS &amp; Docker</title><link>https://4ndrs.xyz/posts/2017-05-26-getting-started-with-terraform-aws-docker/</link><pubDate>Sat, 27 May 2017 00:00:00 +0200</pubDate><guid>https://4ndrs.xyz/posts/2017-05-26-getting-started-with-terraform-aws-docker/</guid><description>This article is an introduction to Terraform and how to use it to set up a basic infrastructure on Amazon Web Services (AWS) to run a simple web service Docker container.
Terraform is an infrastructure-as-code (IAC) tool, that allows for efficiently setting up infrastructure by defining the desired state, which makes it different than many other tools. For more on why you should be using Terraform, check out Gruntwork&amp;#8217;s blog post Why we use Terraform and not Chef, Puppet, Ansible, SaltStack, or CloudFormation.</description></item></channel></rss>